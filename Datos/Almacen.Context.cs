//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AlmacenEntities : DbContext
    {
        public AlmacenEntities()
            : base("name=AlmacenEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bodega> Bodega { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<DetalleFactura> DetalleFactura { get; set; }
        public virtual DbSet<DetalleRegistro> DetalleRegistro { get; set; }
        public virtual DbSet<EstadoFactura> EstadoFactura { get; set; }
        public virtual DbSet<EstadoProducto> EstadoProducto { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<InOut> InOut { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<RolUsuario> RolUsuario { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        [DbFunction("AlmacenEntities", "FN_MostraFactura")]
        public virtual IQueryable<FN_MostraFactura_Result> FN_MostraFactura(Nullable<int> numFact)
        {
            var numFactParameter = numFact.HasValue ?
                new ObjectParameter("numFact", numFact) :
                new ObjectParameter("numFact", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_MostraFactura_Result>("[AlmacenEntities].[FN_MostraFactura](@numFact)", numFactParameter);
        }
    
        [DbFunction("AlmacenEntities", "fnTableColumnInfo")]
        public virtual IQueryable<fnTableColumnInfo_Result> fnTableColumnInfo(string sTableName)
        {
            var sTableNameParameter = sTableName != null ?
                new ObjectParameter("sTableName", sTableName) :
                new ObjectParameter("sTableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnTableColumnInfo_Result>("[AlmacenEntities].[fnTableColumnInfo](@sTableName)", sTableNameParameter);
        }
    
        public virtual int Delete_Cliente(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Cliente", nitParameter);
        }
    
        public virtual int Insert_Cliente(string nit, string nombre, string direccion)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Cliente", nitParameter, nombreParameter, direccionParameter);
        }
    
        public virtual int pr__SYS_MakeDeleteRecordProc(string sTableName, Nullable<bool> bExecute)
        {
            var sTableNameParameter = sTableName != null ?
                new ObjectParameter("sTableName", sTableName) :
                new ObjectParameter("sTableName", typeof(string));
    
            var bExecuteParameter = bExecute.HasValue ?
                new ObjectParameter("bExecute", bExecute) :
                new ObjectParameter("bExecute", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr__SYS_MakeDeleteRecordProc", sTableNameParameter, bExecuteParameter);
        }
    
        public virtual int pr__SYS_MakeInsertRecordProc(string sTableName, Nullable<bool> bExecute)
        {
            var sTableNameParameter = sTableName != null ?
                new ObjectParameter("sTableName", sTableName) :
                new ObjectParameter("sTableName", typeof(string));
    
            var bExecuteParameter = bExecute.HasValue ?
                new ObjectParameter("bExecute", bExecute) :
                new ObjectParameter("bExecute", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr__SYS_MakeInsertRecordProc", sTableNameParameter, bExecuteParameter);
        }
    
        public virtual int pr__SYS_MakeSelectRecordProc(string sTableName, Nullable<bool> bExecute)
        {
            var sTableNameParameter = sTableName != null ?
                new ObjectParameter("sTableName", sTableName) :
                new ObjectParameter("sTableName", typeof(string));
    
            var bExecuteParameter = bExecute.HasValue ?
                new ObjectParameter("bExecute", bExecute) :
                new ObjectParameter("bExecute", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr__SYS_MakeSelectRecordProc", sTableNameParameter, bExecuteParameter);
        }
    
        public virtual int pr__SYS_MakeUpdateRecordProc(string sTableName, Nullable<bool> bExecute)
        {
            var sTableNameParameter = sTableName != null ?
                new ObjectParameter("sTableName", sTableName) :
                new ObjectParameter("sTableName", typeof(string));
    
            var bExecuteParameter = bExecute.HasValue ?
                new ObjectParameter("bExecute", bExecute) :
                new ObjectParameter("bExecute", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr__SYS_MakeUpdateRecordProc", sTableNameParameter, bExecuteParameter);
        }
    
        public virtual int PR_ClienteDelete_Web(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_ClienteDelete_Web", nitParameter);
        }
    
        public virtual int PR_ClienteInsert_Web(string nit, string nombre, string direccion, string telefono)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_ClienteInsert_Web", nitParameter, nombreParameter, direccionParameter, telefonoParameter);
        }
    
        public virtual int PR_ClienteUpdate_Web(string nit, string nombre, string direccion, string telefono)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_ClienteUpdate_Web", nitParameter, nombreParameter, direccionParameter, telefonoParameter);
        }
    
        public virtual int prApp_Bodega_Delete(Nullable<int> idBodega)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("idBodega", idBodega) :
                new ObjectParameter("idBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prApp_Bodega_Delete", idBodegaParameter);
        }
    
        public virtual int prApp_Bodega_Insert(string nombre, string direccion, string municipio)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var municipioParameter = municipio != null ?
                new ObjectParameter("municipio", municipio) :
                new ObjectParameter("municipio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prApp_Bodega_Insert", nombreParameter, direccionParameter, municipioParameter);
        }
    
        public virtual ObjectResult<prApp_Bodega_Select_Result> prApp_Bodega_Select(Nullable<int> idBodega)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("idBodega", idBodega) :
                new ObjectParameter("idBodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prApp_Bodega_Select_Result>("prApp_Bodega_Select", idBodegaParameter);
        }
    
        public virtual int prApp_Bodega_Update(Nullable<int> idBodega, string nombre, string direccion, string municipio)
        {
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("idBodega", idBodega) :
                new ObjectParameter("idBodega", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var municipioParameter = municipio != null ?
                new ObjectParameter("municipio", municipio) :
                new ObjectParameter("municipio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prApp_Bodega_Update", idBodegaParameter, nombreParameter, direccionParameter, municipioParameter);
        }
    
        public virtual int prApp_Producto_Delete(Nullable<int> codProducto)
        {
            var codProductoParameter = codProducto.HasValue ?
                new ObjectParameter("codProducto", codProducto) :
                new ObjectParameter("codProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prApp_Producto_Delete", codProductoParameter);
        }
    
        public virtual int prApp_Producto_Insert(string sku, string nombre, Nullable<int> cantidad, Nullable<decimal> precioCosto, Nullable<decimal> precioVenta, Nullable<int> idBodega, Nullable<int> idEstado)
        {
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioCostoParameter = precioCosto.HasValue ?
                new ObjectParameter("precioCosto", precioCosto) :
                new ObjectParameter("precioCosto", typeof(decimal));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("precioVenta", precioVenta) :
                new ObjectParameter("precioVenta", typeof(decimal));
    
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("idBodega", idBodega) :
                new ObjectParameter("idBodega", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prApp_Producto_Insert", skuParameter, nombreParameter, cantidadParameter, precioCostoParameter, precioVentaParameter, idBodegaParameter, idEstadoParameter);
        }
    
        public virtual int prApp_Producto_Update(Nullable<int> codProducto, string sku, string nombre, Nullable<int> cantidad, Nullable<decimal> precioCosto, Nullable<decimal> precioVenta, Nullable<int> idBodega, Nullable<int> idEstado)
        {
            var codProductoParameter = codProducto.HasValue ?
                new ObjectParameter("codProducto", codProducto) :
                new ObjectParameter("codProducto", typeof(int));
    
            var skuParameter = sku != null ?
                new ObjectParameter("sku", sku) :
                new ObjectParameter("sku", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioCostoParameter = precioCosto.HasValue ?
                new ObjectParameter("precioCosto", precioCosto) :
                new ObjectParameter("precioCosto", typeof(decimal));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("precioVenta", precioVenta) :
                new ObjectParameter("precioVenta", typeof(decimal));
    
            var idBodegaParameter = idBodega.HasValue ?
                new ObjectParameter("idBodega", idBodega) :
                new ObjectParameter("idBodega", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prApp_Producto_Update", codProductoParameter, skuParameter, nombreParameter, cantidadParameter, precioCostoParameter, precioVentaParameter, idBodegaParameter, idEstadoParameter);
        }
    
        public virtual int prApp_Usuario_Insert(Nullable<int> idRol, string nombre, string usuario, string contrasenia, string correo, Nullable<int> idSuperior)
        {
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("idRol", idRol) :
                new ObjectParameter("idRol", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("contrasenia", contrasenia) :
                new ObjectParameter("contrasenia", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var idSuperiorParameter = idSuperior.HasValue ?
                new ObjectParameter("idSuperior", idSuperior) :
                new ObjectParameter("idSuperior", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prApp_Usuario_Insert", idRolParameter, nombreParameter, usuarioParameter, contraseniaParameter, correoParameter, idSuperiorParameter);
        }
    
        public virtual int prApp_Usuario_Update(Nullable<int> idUsuario, Nullable<int> idRol, string nombre, string usuario, string contrasenia, string correo, Nullable<int> idSuperior)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("idRol", idRol) :
                new ObjectParameter("idRol", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("contrasenia", contrasenia) :
                new ObjectParameter("contrasenia", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var idSuperiorParameter = idSuperior.HasValue ?
                new ObjectParameter("idSuperior", idSuperior) :
                new ObjectParameter("idSuperior", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prApp_Usuario_Update", idUsuarioParameter, idRolParameter, nombreParameter, usuarioParameter, contraseniaParameter, correoParameter, idSuperiorParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
